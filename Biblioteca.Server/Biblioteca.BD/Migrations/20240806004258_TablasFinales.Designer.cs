// <auto-generated />
using System;
using Biblioteca.BD.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Biblioteca.BD.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240806004258_TablasFinales")]
    partial class TablasFinales
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Biblioteca.BD.Data.Entity.Autor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdAutor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("Biblioteca.BD.Data.Entity.Bibliotec", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Domicilio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdBiblioteca")
                        .HasColumnType("int");

                    b.Property<int>("IdLocalidad")
                        .HasColumnType("int");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Bibliotecas");
                });

            modelBuilder.Entity("Biblioteca.BD.Data.Entity.Columnas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("ColumnaNumero")
                        .HasColumnType("int");

                    b.Property<int>("IdColumna")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Columnas");
                });

            modelBuilder.Entity("Biblioteca.BD.Data.Entity.Editorial", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("EditorialDomicilio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditorialMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditorialNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EditorialTelefono")
                        .HasColumnType("int");

                    b.Property<int>("IdEditorial")
                        .HasColumnType("int");

                    b.Property<int>("IdLocalidad")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Editorial");
                });

            modelBuilder.Entity("Biblioteca.BD.Data.Entity.Estanteria", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("IdEstanteria")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Estanterias");
                });

            modelBuilder.Entity("Biblioteca.BD.Data.Entity.Filas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("FilaNumero")
                        .HasColumnType("int");

                    b.Property<int>("IdFilas")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Filas");
                });

            modelBuilder.Entity("Biblioteca.BD.Data.Entity.Genero", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("GeneroNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdGenero")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("Biblioteca.BD.Data.Entity.Libros", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateOnly>("AnioPublicacion")
                        .HasColumnType("date");

                    b.Property<int>("IdAutor")
                        .HasColumnType("int");

                    b.Property<int>("IdEditorial")
                        .HasColumnType("int");

                    b.Property<int>("IdGenero")
                        .HasColumnType("int");

                    b.Property<int>("IdLibro")
                        .HasColumnType("int");

                    b.Property<int>("IdUbicacion")
                        .HasColumnType("int");

                    b.Property<int?>("Paginas")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("idBiblioteca")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Libros");
                });

            modelBuilder.Entity("Biblioteca.BD.Data.Entity.Localidades", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("IdLocalidad")
                        .HasColumnType("int");

                    b.Property<int>("IdProvincia")
                        .HasColumnType("int");

                    b.Property<int>("LocalidadCp")
                        .HasColumnType("int");

                    b.Property<string>("LocalidadNombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Localidades");
                });

            modelBuilder.Entity("Biblioteca.BD.Data.Entity.Provincias", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("IdProvincia")
                        .HasColumnType("int");

                    b.Property<string>("ProvinciaNombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Provincias");
                });

            modelBuilder.Entity("Biblioteca.BD.Data.Entity.Ubicacion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("IdEstanteria")
                        .HasColumnType("int");

                    b.Property<int>("IdUbicacion")
                        .HasColumnType("int");

                    b.Property<string>("UbicacionNombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Ubicacion");
                });
#pragma warning restore 612, 618
        }
    }
}
